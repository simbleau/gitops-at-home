---
- name: Prepare cluster
  hosts:
    - master
    - worker
  become: true
  gather_facts: true
  any_errors_fatal: true
  ignore_unreachable: true
  pre_tasks:
    # Install sops
    # TODO: Blocked on https://github.com/ansible-collections/community.sops/issues/128
    # - name: Install SOPS
    #  ansible.builtin.include_role:
    #    name: community.sops.install
    - name: Assert SOPS is installed
      delegate_to: localhost
      ansible.builtin.shell: command -v sops >/dev/null 2>&1
      register: is_sops_installed
      changed_when: is_sops_installed.rc != 0
      ignore_errors: false

    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
  roles:
    - kubernetes
  tasks:
    - name: System Configuration (1)
      block:
        - name: System Configuration (1) | Disable firewall
          ansible.builtin.systemd:
            service: ufw
            enabled: false
            masked: true
            state: stopped
        - name: System Configuration (1) | Enable fstrim
          ansible.builtin.systemd:
            service: fstrim.timer
            enabled: true
    - name: System Configuration (2)
      block:
        - name: System Configuration (2) | Apt update
          ansible.builtin.apt:
            update_cache: true
            cache_valid_time: 3600
          register: apt_update
          retries: 3
          until: apt_update is success
        - name: System Configuration (2) | Install raspi kernel modules
          ansible.builtin.apt:
            name: "{{ item }}"
            state: present
          loop: [linux-modules-extra-raspi]
          when: "'raspi' in ansible_kernel"
        - name: System Configuration (2) | Enable kernel modules now
          community.general.modprobe:
            name: "{{ item }}"
            state: present
          loop: [br_netfilter, overlay]
        - name: System Configuration (2) | Enable kernel modules on boot
          ansible.builtin.copy:
            mode: 0644
            content: "{{ item }}"
            dest: "/etc/modules-load.d/{{ item }}.conf"
          loop: [br_netfilter, overlay, rbd]
        - name: System Configuration (2) | Set sysctls
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_file: /etc/sysctl.d/99-kubernetes.conf
            reload: true
          with_dict: "{{ sysctl_config }}"
          vars:
            sysctl_config:
              net.ipv4.ip_forward: 1
              net.ipv4.conf.all.forwarding: 1
              net.ipv4.conf.all.rp_filter: 0
              net.ipv4.conf.default.rp_filter: 0
              net.ipv6.conf.all.forwarding: 1
              net.bridge.bridge-nf-call-iptables: 1
              net.bridge.bridge-nf-call-ip6tables: 1
              fs.inotify.max_user_watches: 524288
              fs.inotify.max_user_instances: 512
        - name: System Configuration (2) | Disable swap
          ansible.builtin.apt:
            name: zram-generator-defaults
            state: absent
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes