---
- name: Load | Config (zshrc)
  ansible.builtin.set_fact:
    zshrc: "{{ lookup('file', 'zshrc.sops.age') | community.sops.decrypt(output_type='binary') }}"

- name: Stage | Config (zshrc)
  ansible.builtin.copy:
    content: "{{ zshrc }}\n"
    dest: "/Users/{{ lookup('env', 'USER') }}/.zshrc"
    owner: "{{ lookup('env', 'USER') }}"
    mode: 0644

- name: Load | Config (zprofile)
  ansible.builtin.set_fact:
    zprofile: "{{ lookup('file', 'zprofile.sops.age') | community.sops.decrypt(output_type='binary') }}"

- name: Stage | Config (zprofile)
  ansible.builtin.copy:
    content: "{{ zprofile }}\n"
    dest: "/Users/{{ lookup('env', 'USER') }}/.zprofile"
    owner: "{{ lookup('env', 'USER') }}"
    mode: 0644

- name: Load | Config (cddns)
  ansible.builtin.set_fact:
    cddns_toml: "{{ lookup('file', 'cddns.toml.sops.age') | community.sops.decrypt(output_type='binary') }}"

- name: Stage | Config (cddns)
  ansible.builtin.copy:
    content: "{{ cddns_toml }}\n"
    dest: "{{ lookup('env', 'HOME') }}/Library/Application Support/cddns/config.toml"
    owner: "{{ lookup('env', 'USER') }}"
    mode: 0400

- name: Load | Config (kubeconfig)
  ansible.builtin.set_fact:
    kubeconfig: "{{ lookup('file', 'kubeconfig.sops.yml') | community.sops.decrypt(output_type='yaml') }}"

- name: Stage | Config (kubeconfig)
  ansible.builtin.copy:
    content: "{{ kubeconfig }}\n"
    dest: "{{ lookup('env', 'HOME') }}/.kube/config"
    owner: "{{ lookup('env', 'USER') }}"
    mode: 0400
